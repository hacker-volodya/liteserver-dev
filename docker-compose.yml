version: '2'
services:
  explorer:
    build: explorer
    restart: always
    labels:
      - "traefik.http.routers.explorer.rule=Host(`explorer.liteserver.tech`)"
      - "traefik.enable=true"
  block-metrics:
    build: block-metrics
    restart: always
  logs:
    image: amir20/dozzle:v5.8.1
    restart: unless-stopped
    environment:
      - DOZZLE_BASE=/logs
      - DOZZLE_PASSWORD=root
      - DOZZLE_USERNAME=root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.http.routers.logs.rule=Host(`logs.liteserver.tech`)"
      - "traefik.enable=true"
  prometheus:
    build: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - prometheus_data:/prometheus
    restart: always
  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    environment:
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer"
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.liteserver.tech`)"
      - "traefik.enable=true"
  traefik:
    build: traefik
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'
  jaeger:
    image: jaegertracing/all-in-one
    labels:
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.liteserver.tech`)"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      - "traefik.enable=true"
  app:
    build:
      context: liteserver
      additional_contexts:
        config: ./config
      dockerfile_inline: |
        # syntax = devthefuture/dockerfile-x
        FROM ./Dockerfile
        COPY --from=config /config.yml /config.yml
    ports:
      - 30303:30303/udp
      - 3333:3333/tcp
    restart: always
    command: ["-c", "/config.yml"]
    environment:
     - JAEGER_AGENT_ENDPOINT=jaeger:6831
  toncenter:
    build: toncenter
    environment:
      - TON_API_LOGS_LEVEL=DEBUG
      - TON_API_TONLIB_LITESERVER_CONFIG=/global.config.json
    restart: always
    command: -c "gunicorn -k uvicorn.workers.UvicornWorker -w 16 --bind 0.0.0.0:8081 pyTON.main:app"
    healthcheck:
      test: curl -sS http://127.0.0.1:8081/healthcheck || echo 1
      interval: 15s
      timeout: 3s
      retries: 12
    labels:
      - "traefik.http.routers.jaeger.rule=Host(`toncenter.liteserver.tech`)"
      - "traefik.http.services.jaeger.loadbalancer.server.port=8081"
      - "traefik.enable=true"
volumes:
  grafana_data: {}
  prometheus_data: {}
